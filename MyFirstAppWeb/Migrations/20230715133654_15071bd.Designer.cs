// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFirstAppWeb.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyFirstAppWeb.Migrations
{
    [DbContext(typeof(MyFirstAppWebContext))]
    [Migration("20230715133654_15071bd")]
    partial class _15071bd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyFirstAppWeb.Models.Cliente", b =>
                {
                    b.Property<int>("Id_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_cliente");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Cliente"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Cpf_Cnpj")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf_cnpj");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<int>("TipoCliente")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_cliente");

                    b.HasKey("Id_Cliente");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("MyFirstAppWeb.Models.Item", b =>
                {
                    b.Property<int>("Id_item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_item");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_item"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<double>("Preco")
                        .HasColumnType("double precision")
                        .HasColumnName("preco");

                    b.HasKey("Id_item");

                    b.ToTable("item");
                });

            modelBuilder.Entity("MyFirstAppWeb.Models.ItemVenda", b =>
                {
                    b.Property<int>("IdItemVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_item_venda");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdItemVenda"));

                    b.Property<int>("CodItem")
                        .HasColumnType("integer")
                        .HasColumnName("cod_item");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double precision")
                        .HasColumnName("quantidade");

                    b.Property<int?>("VendaIdVenda")
                        .HasColumnType("integer");

                    b.HasKey("IdItemVenda");

                    b.HasIndex("VendaIdVenda");

                    b.ToTable("item_venda");
                });

            modelBuilder.Entity("MyFirstAppWeb.Models.Venda", b =>
                {
                    b.Property<int>("IdVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_venda");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVenda"));

                    b.Property<int>("CodCliente")
                        .HasColumnType("integer")
                        .HasColumnName("cod_cliente");

                    b.Property<int>("CodVendedor")
                        .HasColumnType("integer")
                        .HasColumnName("cod_vendedor");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data");

                    b.Property<string>("Numero_Cupom")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero_cupom");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double precision")
                        .HasColumnName("valor_total");

                    b.HasKey("IdVenda");

                    b.ToTable("venda");
                });

            modelBuilder.Entity("MyFirstAppWeb.Models.Vendedor", b =>
                {
                    b.Property<int>("Id_Vendedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_vendedor");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Vendedor"));

                    b.Property<int>("Codigo")
                        .HasColumnType("integer")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<double>("SalarioBase")
                        .HasColumnType("double precision")
                        .HasColumnName("salario_base");

                    b.HasKey("Id_Vendedor");

                    b.ToTable("vendedores");
                });

            modelBuilder.Entity("MyFirstAppWeb.Models.ItemVenda", b =>
                {
                    b.HasOne("MyFirstAppWeb.Models.Venda", null)
                        .WithMany("ItemVenda")
                        .HasForeignKey("VendaIdVenda");
                });

            modelBuilder.Entity("MyFirstAppWeb.Models.Venda", b =>
                {
                    b.Navigation("ItemVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
